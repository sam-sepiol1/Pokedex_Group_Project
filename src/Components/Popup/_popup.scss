@use "sass:map";
@use "sass:color";

@use '../variables' as *;

$types-colors: (
  bug: color.adjust($Bug, $lightness: -20%, $space: hsl),
  dark: color.adjust($Dark, $lightness: -20%, $space: hsl),
  fairy: color.adjust($Fairy, $lightness: -20%, $space: hsl),
  fighting: color.adjust($Fighting, $lightness: -20%, $space: hsl),
  fire: color.adjust($Fire, $lightness: -20%, $space: hsl),
  flying: color.adjust($Flying, $lightness: -20%, $space: hsl),
  ghost: color.adjust($Ghost, $lightness: -20%, $space: hsl),
  grass: color.adjust($Grass, $lightness: -20%, $space: hsl),
  ground: color.adjust($Ground, $lightness: -20%, $space: hsl),
  ice: color.adjust($Ice, $lightness: -20%, $space: hsl),
  normal: color.adjust($Normal, $lightness: -20%, $space: hsl),
  poison: color.adjust($Poison, $lightness: -20%, $space: hsl),
  psychic: color.adjust($Psychic, $lightness: -20%, $space: hsl),
  rock: color.adjust($Rock, $lightness: -20%, $space: hsl),
  steel: color.adjust($Steel, $lightness: -20%, $space: hsl),
  water: color.adjust($Water, $lightness: -20%, $space: hsl),
  dragon: color.adjust($Dragon, $lightness: -20%, $space: hsl),
  electric: color.adjust($Electric, $lightness: -20%, $space: hsl),
);

@mixin background-color($type) {
  background-color: map.get($types-colors, $type);
}


.allInfo {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  height: 50vh;
  padding: 3rem 2rem;
  z-index: 1000;
  display: flex;
  flex-direction: column;
  overflow-y: auto; 
  color: $White;
  border-radius: 15px;
  background-color: $Dark;
  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);


  @each $type, $color in $types-colors {
    &.#{$type} {
      @include background-color($type);
    }
  }
}

.popup__container {
  display: flex;
  gap : 1em;
  align-items: center;
  justify-content: center;
  background-color: $Dark;
  border-radius: 50px;
}

.popup__header,
.popup__info {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 1em;
}

.popup__title,
.popup__id {
  color: $White;
}

.popup__title {
  font-weight: bold;
  font-size: 2rem;
}

.popup__back {
  background-color: transparent;
  border: none;
  font-size: 2rem;
  cursor: pointer;
  object-fit: contain;
  display: flex;
  align-items: center;
  justify-content: center;
  color: $White;
}

.popup__stats {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 2em;
  padding: 1em;
  border-radius: 5px;
}

.popup__img { 
  display: flex;
  align-items: center;
  justify-content: center;
  width: 95%;
}



.popup__types {
  display: flex;
  flex-direction: row;
  gap: 1em;
}

.about {
  font-weight: bold;
  font-size: 1.5rem;
}

.popup__measurements {
  display: flex;
  flex-direction: row;
  align-items: stretch;
  justify-content: center;
  text-align: center;
  gap: 1em;
  height: auto;
  width: 100%;
  max-width: 500px;
  padding: 1rem;
}

.weight__container,
.height__container,
.moves__value {
  display: flex;
  gap: 1em;
  padding: 1em;
}

.moves {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.popup__divider {
  border: none;
  background-color: $White;
  width: 2px;
}

.height__title,
.weight__title,
.moves__title {
  color: $White;
}

.description {
  padding: 0 1em;
  text-align: center;
}

.base__stats {
  width: 100%;
  padding: 1rem;
  background-color: rgba($Background, 0.9);
  border-radius: 5px;
  color: $Dark;
}

.stats__container {
  display: flex;
  flex-direction: column;
  gap: 1em;
}

.base__stats__title {
  text-align: center;
  font-weight: bold;
  font-size: 1.5rem;
}

.stat {
  display: flex;
  align-items: center;
  gap: 1em;
  padding: 0.5 1.3em;
}

.label {
  width: 40px;
  text-align: right;
  font-weight: bold;


}

.value {
  width: 40px;
  text-align: right;
  font-weight: bold;

}

.bar {
  flex-grow: 1;
  height: 8px;
  margin-left: 10px;
  border-radius: 4px;
  position: relative;
}

.fill {
  height: 100%;
  background-color: $Dark;
  border-radius: 4px 0 0 4px;
}